name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  release:
    name: Release to NPM
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Run tests with coverage
      run: npm run test:coverage
      
    - name: Build documentation
      run: npm run docs
      
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## üöÄ BoxQ ${{ github.ref_name }}
          
          ### ‚ú® Features
          - Enterprise-grade SQS library for Node.js
          - Circuit breaker pattern for fault tolerance
          - Retry logic with exponential backoff
          - Long polling support for cost efficiency
          - Comprehensive monitoring and health checks
          - FIFO queue support with deduplication
          - Express.js microservice integration
          
          ### üì¶ Installation
          ```bash
          npm install boxq
          ```
          
          ### üîó Links
          - [Documentation](https://github.com/mahajanankur/boxq#readme)
          - [Examples](https://github.com/mahajanankur/boxq/tree/main/examples)
          - [Changelog](https://github.com/mahajanankur/boxq/blob/main/CHANGELOG.md)
        draft: false
        prerelease: false
        
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: release
        name: codecov-release
        fail_ci_if_error: false

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [release]
    if: always()
    
    steps:
    - name: Notify Success
      if: needs.release.result == 'success'
      run: |
        echo "‚úÖ BoxQ ${{ github.ref_name }} successfully released to NPM!"
        echo "üì¶ Package: https://www.npmjs.com/package/boxq"
        echo "üè∑Ô∏è  Release: https://github.com/mahajanankur/boxq/releases/tag/${{ github.ref_name }}"
        
    - name: Notify Failure
      if: needs.release.result == 'failure'
      run: |
        echo "‚ùå BoxQ release failed!"
        echo "Check the logs for details."
